% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup_lessons.R
\name{setup_lessons}
\alias{setup_lessons}
\title{Set up a schedule of course lessons}
\usage{
setup_lessons(
  lessons,
  package = "lhLessons",
  modules = NULL,
  overwrite = FALSE
)
}
\arguments{
\item{lessons}{Information on the lessons to be included in the course, as a
character vector or data.frame.  A character vector containing the names
(bare or .qmd extension) of the lessons, in order; optionally, a named
character vector where the names are course modules (e.g., "Day 1", "Day 2").
Alternately, a data.frame with columns "module" and "lesson", similar to the
named character vector.}

\item{package}{The name of the course lessons package to use.}

\item{modules}{An additional way to provide module information for the lessons:
a vector of module names that matches the length of the lessons vector. Caution:
if \code{modules} is not NULL, and module names are provided directly in \code{lessons},
this argument will take precedence.}

\item{overwrite}{If there is already an existing lessons structure, and
\code{overwrite = FALSE}, will return an error.  If the user wishes to create
a new lesson structure, then \code{overwrite = TRUE} will remove the existing
structure in its entirety and create a new structure based on the lesson names.}
}
\description{
Create the structure necessary to implement an ordered set of lessons in the Quarto book format.
The user provides a character vector of lesson names (filenames, bare or with \code{.qmd} extension);
these and associated materials (images, data) are copied from \code{coreRlessons} package into the
course project (created with \code{init_course()}).  Sets up the index.qmd, _quarto.yml, and some
additional files.
}
\examples{
\dontrun{
setup_lessons(lessons = c("activity_reproducibility_lego",
                          "lecture_tidy_data.qmd",
                          "github_collaboration",
                          "r_functions.qmd"))
### modules as named vector
lesson_mods <- available_lessons()$lesson[1:6] |> setNames(c(1, 1, 2, 2, 3, 3))
setup_lessons(lessons = lesson_mods)

### modules as argument
setup_lessons(lessons = available_lessons()$lesson[1:6],
              modules = rep(c("day 1", "day 2"), each = 3))

### modules and course as dataframe
example_course <- coreRlessons::example_course
head(example_course, 3)
#   module                        lesson
# 1  Day 1    r_programming_introduction
# 2  Day 1    r_quarto_literate_analysis
# 3  Day 1 activity_reproducibility_lego
setup_lessons(example_course)
}
}
